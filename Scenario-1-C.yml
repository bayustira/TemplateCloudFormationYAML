---
AWSTemplateFormatVersion: 2010-09-09
Description: Provision NAT gateway & EC2 instance on private subnet
Mappings:
  AmiMap:
    ServerType01:
      id:  ami-00399ec92321828f5
      
Parameters:
  Scenario1AStackName:
    Description: Name of Scenario 1-A stack
    Type: String
    Default: Scenario-1-A

  KeyPairName:
    Description: EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: EC2TestCF

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro

Resources:
  MyNATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - MyEIP
        - AllocationId
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${Scenario1AStackName}-PublicSubnetID"
      Tags:
      - Key: Name
        Value: Scenario-1-NAT-Gateway

  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC
      Tags:
      - Key: Name
        Value: Scenario-1-EIP

  myPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Fn::ImportValue:
          Fn::Sub: "${Scenario1AStackName}-PrivateRTID"
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyNATGateway

  PrivateScenario1SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable ssh & icmp
      GroupName: Private-Scenario-1-SG
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${Scenario1AStackName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 10.100.0.0/24
      - IpProtocol: icmp
        FromPort: 8
        ToPort: -1
        CidrIp: 10.100.0.0/24
        Description: Open Port ALL ICMP - IPv4
      Tags:
      - Key: Name
        Value: Private-Scenario-1-SG
      - Key: Application
        Value:
          Ref: AWS::StackName

  PrivateEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyPairName
      ImageId:
        Fn::FindInMap:
        - AmiMap
        - ServerType01
        - id
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          DeleteOnTermination: true
          VolumeSize: 8
          VolumeType: gp2
      NetworkInterfaces:
      - AssociatePublicIpAddress: false
        DeleteOnTermination: true
        Description: Private EC2 instance network interface
        DeviceIndex: '0'
        SubnetId:
          Fn::ImportValue:
            Fn::Sub: "${Scenario1AStackName}-PrivateSubnetID"
        GroupSet:
        - Ref: PrivateScenario1SecurityGroup
      Tags:
      - Key: Name
        Value: Private-Scenario-1-EC2
      - Key: Application
        Value:
          Ref: AWS::StackName

Outputs:
  PrivateSG:
    Description: Scenario 1 Private SG ID
    Value:
      Ref: PrivateScenario1SecurityGroup
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PrivateSGID"

  PrivateEC2Instance:
    Description: Scenario 1 Private EC2 ID
    Value:
      Ref: PrivateEC2Instance
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PrivateEC2ID"
